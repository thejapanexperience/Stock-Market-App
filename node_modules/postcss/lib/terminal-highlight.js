'use strict';

exports.__esModule = true;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _tokenize = require('./tokenize');

var _tokenize2 = _interopRequireDefault(_tokenize);

var _input = require('./input');

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var colors = new _chalk2.default.constructor({ enabled: true });

var HIGHLIGHT_THEME = {
    'brackets': colors.cyan,
    'invalid': colors.white.bgRed.bold,
    'at-word': colors.red,
    'comment': colors.gray,
    'string': colors.red,
    '{': colors.green,
    '}': colors.green,
    ':': colors.bold,
    ';': colors.bold,
    '(': colors.bold,
    ')': colors.bold
};

function inside(token, line, column) {
    if (!line || !column) {
        return false;
    } else if (token.length >= 6) {
        return token[2] <= line && token[3] <= column && token[4] >= line && token[5] >= column;
    } else if (token.length === 4) {
        return token[2] === line && token[3] === column;
    } else {
        return false;
    }
}

function terminalHighlight(css, line, column) {
    var tokens = (0, _tokenize2.default)(new _input2.default(css), { ignoreErrors: true });
    var result = [];

    var _loop = function _loop() {
        if (_isArray) {
            if (_i >= _iterator.length) return 'break';
            _ref = _iterator[_i++];
        } else {
            _i = _iterator.next();
            if (_i.done) return 'break';
            _ref = _i.value;
        }

        var token = _ref;

        var color = HIGHLIGHT_THEME[token[0]];
        if (inside(token, line, column)) {
            color = HIGHLIGHT_THEME.invalid;
        } else {
            color = HIGHLIGHT_THEME[token[0]];
        }
        if (color) {
            result.push(token[1].split(/\r?\n/).map(function (i) {
                return color(i);
            }).join('\n'));
        } else {
            result.push(token[1]);
        }
    };

    for (var _iterator = tokens, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        var _ret = _loop();

        if (_ret === 'break') break;
    }
    return result.join('');
}

exports.default = terminalHighlight;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlcm1pbmFsLWhpZ2hsaWdodC5lczYiXSwibmFtZXMiOlsiY29sb3JzIiwiY29uc3RydWN0b3IiLCJlbmFibGVkIiwiSElHSExJR0hUX1RIRU1FIiwiY3lhbiIsIndoaXRlIiwiYmdSZWQiLCJib2xkIiwicmVkIiwiZ3JheSIsImdyZWVuIiwiaW5zaWRlIiwidG9rZW4iLCJsaW5lIiwiY29sdW1uIiwibGVuZ3RoIiwidGVybWluYWxIaWdobGlnaHQiLCJjc3MiLCJ0b2tlbnMiLCJpZ25vcmVFcnJvcnMiLCJyZXN1bHQiLCJjb2xvciIsImludmFsaWQiLCJwdXNoIiwic3BsaXQiLCJtYXAiLCJpIiwiam9pbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0FBRUE7Ozs7QUFDQTs7Ozs7O0FBRUEsSUFBSUEsU0FBUyxJQUFJLGdCQUFNQyxXQUFWLENBQXNCLEVBQUVDLFNBQVMsSUFBWCxFQUF0QixDQUFiOztBQUVBLElBQU1DLGtCQUFrQjtBQUNwQixnQkFBWUgsT0FBT0ksSUFEQztBQUVwQixlQUFZSixPQUFPSyxLQUFQLENBQWFDLEtBQWIsQ0FBbUJDLElBRlg7QUFHcEIsZUFBWVAsT0FBT1EsR0FIQztBQUlwQixlQUFZUixPQUFPUyxJQUpDO0FBS3BCLGNBQVlULE9BQU9RLEdBTEM7QUFNcEIsU0FBWVIsT0FBT1UsS0FOQztBQU9wQixTQUFZVixPQUFPVSxLQVBDO0FBUXBCLFNBQVlWLE9BQU9PLElBUkM7QUFTcEIsU0FBWVAsT0FBT08sSUFUQztBQVVwQixTQUFZUCxPQUFPTyxJQVZDO0FBV3BCLFNBQVlQLE9BQU9PO0FBWEMsQ0FBeEI7O0FBY0EsU0FBU0ksTUFBVCxDQUFnQkMsS0FBaEIsRUFBdUJDLElBQXZCLEVBQTZCQyxNQUE3QixFQUFxQztBQUNqQyxRQUFLLENBQUNELElBQUQsSUFBUyxDQUFDQyxNQUFmLEVBQXdCO0FBQ3BCLGVBQU8sS0FBUDtBQUNILEtBRkQsTUFFTyxJQUFLRixNQUFNRyxNQUFOLElBQWdCLENBQXJCLEVBQXlCO0FBQzVCLGVBQU9ILE1BQU0sQ0FBTixLQUFZQyxJQUFaLElBQW9CRCxNQUFNLENBQU4sS0FBWUUsTUFBaEMsSUFDQUYsTUFBTSxDQUFOLEtBQVlDLElBRFosSUFDb0JELE1BQU0sQ0FBTixLQUFZRSxNQUR2QztBQUVILEtBSE0sTUFHQSxJQUFLRixNQUFNRyxNQUFOLEtBQWlCLENBQXRCLEVBQTBCO0FBQzdCLGVBQU9ILE1BQU0sQ0FBTixNQUFhQyxJQUFiLElBQXFCRCxNQUFNLENBQU4sTUFBYUUsTUFBekM7QUFDSCxLQUZNLE1BRUE7QUFDSCxlQUFPLEtBQVA7QUFDSDtBQUNKOztBQUVELFNBQVNFLGlCQUFULENBQTJCQyxHQUEzQixFQUFnQ0osSUFBaEMsRUFBc0NDLE1BQXRDLEVBQThDO0FBQzFDLFFBQUlJLFNBQVMsd0JBQVMsb0JBQVVELEdBQVYsQ0FBVCxFQUF5QixFQUFFRSxjQUFjLElBQWhCLEVBQXpCLENBQWI7QUFDQSxRQUFJQyxTQUFTLEVBQWI7O0FBRjBDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxZQUdoQ1IsS0FIZ0M7O0FBSXRDLFlBQUlTLFFBQVFsQixnQkFBZ0JTLE1BQU0sQ0FBTixDQUFoQixDQUFaO0FBQ0EsWUFBS0QsT0FBT0MsS0FBUCxFQUFjQyxJQUFkLEVBQW9CQyxNQUFwQixDQUFMLEVBQW1DO0FBQy9CTyxvQkFBUWxCLGdCQUFnQm1CLE9BQXhCO0FBQ0gsU0FGRCxNQUVPO0FBQ0hELG9CQUFRbEIsZ0JBQWdCUyxNQUFNLENBQU4sQ0FBaEIsQ0FBUjtBQUNIO0FBQ0QsWUFBS1MsS0FBTCxFQUFhO0FBQ1RELG1CQUFPRyxJQUFQLENBQVlYLE1BQU0sQ0FBTixFQUFTWSxLQUFULENBQWUsT0FBZixFQUNUQyxHQURTLENBQ0o7QUFBQSx1QkFBS0osTUFBTUssQ0FBTixDQUFMO0FBQUEsYUFESSxFQUVUQyxJQUZTLENBRUosSUFGSSxDQUFaO0FBR0gsU0FKRCxNQUlPO0FBQ0hQLG1CQUFPRyxJQUFQLENBQVlYLE1BQU0sQ0FBTixDQUFaO0FBQ0g7QUFoQnFDOztBQUcxQyx5QkFBbUJNLE1BQW5CLGtIQUE0QjtBQUFBOztBQUFBOztBQUFBO0FBYzNCO0FBQ0QsV0FBT0UsT0FBT08sSUFBUCxDQUFZLEVBQVosQ0FBUDtBQUNIOztrQkFFY1gsaUIiLCJmaWxlIjoidGVybWluYWwtaGlnaGxpZ2h0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWxrIGZyb20gJ2NoYWxrJztcblxuaW1wb3J0IHRva2VuaXplIGZyb20gJy4vdG9rZW5pemUnO1xuaW1wb3J0IElucHV0ICAgIGZyb20gJy4vaW5wdXQnO1xuXG5sZXQgY29sb3JzID0gbmV3IGNoYWxrLmNvbnN0cnVjdG9yKHsgZW5hYmxlZDogdHJ1ZSB9KTtcblxuY29uc3QgSElHSExJR0hUX1RIRU1FID0ge1xuICAgICdicmFja2V0cyc6IGNvbG9ycy5jeWFuLFxuICAgICdpbnZhbGlkJzogIGNvbG9ycy53aGl0ZS5iZ1JlZC5ib2xkLFxuICAgICdhdC13b3JkJzogIGNvbG9ycy5yZWQsXG4gICAgJ2NvbW1lbnQnOiAgY29sb3JzLmdyYXksXG4gICAgJ3N0cmluZyc6ICAgY29sb3JzLnJlZCxcbiAgICAneyc6ICAgICAgICBjb2xvcnMuZ3JlZW4sXG4gICAgJ30nOiAgICAgICAgY29sb3JzLmdyZWVuLFxuICAgICc6JzogICAgICAgIGNvbG9ycy5ib2xkLFxuICAgICc7JzogICAgICAgIGNvbG9ycy5ib2xkLFxuICAgICcoJzogICAgICAgIGNvbG9ycy5ib2xkLFxuICAgICcpJzogICAgICAgIGNvbG9ycy5ib2xkXG59O1xuXG5mdW5jdGlvbiBpbnNpZGUodG9rZW4sIGxpbmUsIGNvbHVtbikge1xuICAgIGlmICggIWxpbmUgfHwgIWNvbHVtbiApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoIHRva2VuLmxlbmd0aCA+PSA2ICkge1xuICAgICAgICByZXR1cm4gdG9rZW5bMl0gPD0gbGluZSAmJiB0b2tlblszXSA8PSBjb2x1bW4gJiZcbiAgICAgICAgICAgICAgIHRva2VuWzRdID49IGxpbmUgJiYgdG9rZW5bNV0gPj0gY29sdW1uO1xuICAgIH0gZWxzZSBpZiAoIHRva2VuLmxlbmd0aCA9PT0gNCApIHtcbiAgICAgICAgcmV0dXJuIHRva2VuWzJdID09PSBsaW5lICYmIHRva2VuWzNdID09PSBjb2x1bW47XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gdGVybWluYWxIaWdobGlnaHQoY3NzLCBsaW5lLCBjb2x1bW4pIHtcbiAgICBsZXQgdG9rZW5zID0gdG9rZW5pemUobmV3IElucHV0KGNzcyksIHsgaWdub3JlRXJyb3JzOiB0cnVlIH0pO1xuICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICBmb3IgKCBsZXQgdG9rZW4gb2YgdG9rZW5zICkge1xuICAgICAgICBsZXQgY29sb3IgPSBISUdITElHSFRfVEhFTUVbdG9rZW5bMF1dO1xuICAgICAgICBpZiAoIGluc2lkZSh0b2tlbiwgbGluZSwgY29sdW1uKSApIHtcbiAgICAgICAgICAgIGNvbG9yID0gSElHSExJR0hUX1RIRU1FLmludmFsaWQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb2xvciA9IEhJR0hMSUdIVF9USEVNRVt0b2tlblswXV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCBjb2xvciApIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRva2VuWzFdLnNwbGl0KC9cXHI/XFxuLylcbiAgICAgICAgICAgICAgLm1hcCggaSA9PiBjb2xvcihpKSApXG4gICAgICAgICAgICAgIC5qb2luKCdcXG4nKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh0b2tlblsxXSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdGVybWluYWxIaWdobGlnaHQ7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
